[pytest]
# ═══════════════════════════════════════════════════════════════════════════
# 🔒 SPRINT 3 - CONFIGURAÇÃO PYTEST PARA TESTES DO SANDBOX
# ═══════════════════════════════════════════════════════════════════════════

# ─────────────────────────────────────────────────────────────────────────────
# DIRETÓRIOS E ARQUIVOS
# ─────────────────────────────────────────────────────────────────────────────
testpaths = tests/security
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# ─────────────────────────────────────────────────────────────────────────────
# MARKERS CUSTOMIZADOS
# ─────────────────────────────────────────────────────────────────────────────
markers =
    security: Testes de segurança (blacklist/whitelist)
    slow: Testes lentos (> 5 segundos)
    load: Testes de carga e performance
    integration: Testes de integração

# ─────────────────────────────────────────────────────────────────────────────
# OPÇÕES DE EXECUÇÃO
# ─────────────────────────────────────────────────────────────────────────────
addopts =
    # Verbose output
    -v
    # Show local variables in traceback
    -l
    # Show summary of all test outcomes
    -ra
    # Fail on first error (descomente para debug)
    # -x
    # Stop after N failures
    # --maxfail=3
    # Quiet mode (menos verbose)
    # -q
    
    # ═══ COBERTURA DE CÓDIGO ═══
    # Habilitar coverage
    --cov=src/security
    # Report de cobertura no terminal
    --cov-report=term-missing
    # Report HTML (salvo em htmlcov/)
    --cov-report=html
    # Report XML (para CI/CD)
    --cov-report=xml
    # Falhar se cobertura < 85%
    --cov-fail-under=85
    
    # ═══ WARNINGS ═══
    # Tratar warnings como erros (strict mode)
    # -W error
    # Ou apenas mostrar warnings
    -W default
    
    # ═══ DURAÇÃO DOS TESTES ═══
    # Mostrar os 10 testes mais lentos
    --durations=10
    
    # ═══ CAPTURA DE OUTPUT ═══
    # Não capturar stdout/stderr (útil para debug)
    # -s
    # Capturar apenas em falhas
    --capture=no

# ─────────────────────────────────────────────────────────────────────────────
# CONFIGURAÇÕES DE TIMEOUT
# ─────────────────────────────────────────────────────────────────────────────
timeout = 300
timeout_method = thread

# ─────────────────────────────────────────────────────────────────────────────
# PLUGINS E EXTENSÕES
# ─────────────────────────────────────────────────────────────────────────────
# pytest-cov: Cobertura de código
# pytest-timeout: Timeout para testes
# pytest-xdist: Execução paralela de testes

# Para executar em paralelo: pytest -n auto

# ─────────────────────────────────────────────────────────────────────────────
# LOGGING
# ─────────────────────────────────────────────────────────────────────────────
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(filename)s:%(lineno)d] %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# ─────────────────────────────────────────────────────────────────────────────
# PERFORMANCE
# ─────────────────────────────────────────────────────────────────────────────
# Cache de resultados de testes
# pytest --cache-show para ver cache
# pytest --cache-clear para limpar
cache_dir = .pytest_cache

# ─────────────────────────────────────────────────────────────────────────────
# COMANDOS ÚTEIS
# ─────────────────────────────────────────────────────────────────────────────
# pytest                                    # Executar todos os testes
# pytest -v                                  # Verbose
# pytest -k "test_simple"                   # Executar testes matching pattern
# pytest -m security                         # Executar apenas testes security
# pytest --run-slow                          # Incluir testes lentos
# pytest --run-load                          # Incluir testes de carga
# pytest -n auto                             # Executar em paralelo
# pytest --cov-report=html                   # Gerar report HTML
# pytest --durations=20                      # Top 20 testes mais lentos
# pytest --collect-only                      # Apenas listar testes
# pytest --lf                                # Executar apenas últimos falhados
# pytest --ff                                # Falhas primeiro, depois sucessos
# pytest -x                                  # Parar no primeiro erro
